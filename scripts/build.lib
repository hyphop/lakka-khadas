#!/bin/sh

## hyphop ##

#= build lib

[ "$PR" ] || {

DR=$(dirname "$0")    #DR - current dir  rel path
PA=$(realpath "$0")   #PA - current file abs path
DA=$(dirname "$PA")   #DA - current dir  abs path
PN=$(basename "$0")   #PN - current name
PR="$0"               #PR - current file rel path

. $DR/build.conf
#. $DR/build.lib


for d in \
    "$DA"/../../Lakka-LibreELEC/build.*devel/toolchain/sbin \
    "$DA"/../../Lakka-LibreELEC/build.*devel/toolchain/bin \
    "" ; do
    [ -d "$d" ] || continue
#    echo "$d"
    PATH="$(realpath "$d"):$PATH"
done

#exit 

case $PATH in
    *$DA*);;
    *)PATH="$DA/../opt/bin:$DA:$PATH";;
esac

}

FAIL(){
#    [ "$@" ] || {
#    echo "[e] stop fail ">&2
#    exit 1
#    }
    echo "[e] $@">&2
    exit 1
}

CMD(){
    echo "[#] $@">&2
    "$@"
}

#mkimage=$(which mkimage2)
mkimage=$(which mkimage)

[ "$mkimage" ] || FAIL mkimage

sfdisk=$(which sfdisk)
[ "$sfdisk" ] || FAIL sfdisk

mkfs_vfat=$(which mkfs.vfat)
[ "$mkfs_vfat" ] || FAIL mkfs.vfat

mkfs_ext=$(which mkfs.ext4)
[ "$mkfs_ext" ] || FAIL mkfs.ext

mdir=$(which mdir)
[ "$mdir" ] || FAIL mdir

mcopy=$(which mcopy)
[ "$mcopy" ] || FAIL mcopy

dd=$(which dd)
[ "$dd" ] || FAIL dd

[ "$DOWNLOADS" ] || \
    mkdir -p "$DOWNLOADS"

R=
DL() {
    R=
    DOWNLOADS="$DOWNLOADS" \
    . "$DA/download"
}

T=
UNPACK(){
    T=
    case $1 in
    *.tar.*)
    T=${1%.tar.*}
    [ "$2" ] && T=$2
    [ -d "$T" ] || mkdir -p "$T"
    CMD tar -C "$T" -xf  "$1"
    ;;
    *)
    echo "[i] undef format $1">&2
    return 1
    esac
}
